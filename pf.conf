#### First declare a couple of variables ####
##用途高可用web反向代理，默认策略阻止
#配置：服务器双网卡，外部网卡浮动IP提供对外业务，禁止访问外部真实IP，内部网卡浮动IP提供内部业务，心跳检测在内部网卡，ssh管理使用内部网卡真实IP
### Outgoing tcp / udp port ####
##
#1.宏
### 43 - whois, 22 - ssh ### 

tcp_services = "{ www, https}"
##allowe heartbeat detecting， udp694 51530
udp_services = "{ domain, ntp }"
### allow ping / pong ####
icmp_types = "{ echoreq, unreach }"

martians = "{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, 0.0.0.0/8, 240.0.0.0/4 }"
### admin server ranges ###
adminrange = "1.1.1.0/24"
 
# connected to internet
ext_if = "bge1"
# connected to vpn / lan
int_if = "bge0"

#提供业务的浮动IP
ext_vip = "1.2.3.4"
int_vip = "10.0.2.17"

##### ftp proxy
#proxy="127.0.0.1"
#proxyport="8021"


#2.表 
#### define tables. add all subnets and IPs to block
table <ip_blacklist> persist file "/etc/pf.ip_blacklist"
table <ip_whitelist> persist file "/etc/pf.ip_whitelist"

#3.选项
#set loginterface $ext_if
set block-policy drop
set debug misc
set limit frags 5000
set limit src-nodes 10000
set limit states 10000
# TCP参数设定
set timeout { interval 10, frag 30}
set timeout { tcp.first 10, tcp.opening 2, tcp.established 600, tcp.closing 20, tcp.finwait 10, tcp.closed 10}

# UDP、ICMP及其它参数设定
set timeout { udp.first 20, udp.single 10, udp.multiple 10}
set timeout { icmp.first 10, icmp.error 5}
set timeout { other.first 20, other.single 10, other.multiple 20}
set timeout { adaptive.start 0, adaptive.end 0}

#允许最多有65536个连接
#set limit { states 65535, frags 200, src-nodes 65536, tables 65536, table-entries 1048576 }


# unlimited traffic  for loopback and lan / vpn
set skip on { lo0, $int_if}

## down inactive connection quickly
set optimization aggressive
#4.流量整形 
#### Normalization
#scrub provides a measure of protection against certain kinds of attacks based on incorrect handling of packet fragments
scrub in all
#5.队列（带宽管理）

#6.转换
#### NAT and RDR start
#nat-anchor "ftp-proxy/*"
#rdr-anchor "ftp-proxy/*"
 
# redirect ftp traffic
#rdr pass proto tcp from any to any port ftp -> $proxy port $proxyport
#7.过滤规则

# 默认拒绝所有Drop incoming everything
block all

#放行白名单IP
pass in quick from <ip_whitelist>
pass out quick to <ip_whitelist>
#阻止黑名单IP Block all blaclist IPs
# pfctl -t ip_blacklist -T show
block drop in log (all)  quick on $ext_if from <ip_blacklist> to any
block drop out log (all) quick on $ext_if from any to <ip_blacklist>

#TCP SYN 代理
pass in on $ext_if proto tcp from any to $ext_vip port $tcp_services flags S/SA synproxy state

# keep stats of outgoing connections
pass out keep state
 
# We need to have an anchor for ftp-proxy
#anchor "ftp-proxy/*"

# activate spoofing protection for all interfaces
block in quick from urpf-failed
 
#antispoof is a common special case of filtering and blocking. This mechanism protects against activity from spoofed or forged IP addresses
antispoof log quick for $ext_if
 
#Block RFC 1918 addresses
block drop in log (all)  quick on $ext_if from $martians to any
block drop out log (all) quick on $ext_if from any to $martians
 

 
# allow outgoing
pass out on $ext_if proto tcp to any port $tcp_services
pass out on $ext_if proto udp to any port $udp_services
 
# Allow trace route
pass out on $ext_if inet proto udp from any to any port 33433 >< 33626 keep state
 
# Allow admin to get into box
pass in on $int_if from $adminrange to any
 
# Allow incoming ssh, http, bind traffic
# pass in  on $ext_if proto tcp from any to any port 25

pass inet proto icmp all icmp-type $icmp_types keep state
## add your rule below ##
#----------------------------以下防DOS攻击--------------------------------
#每个IP最大可以有100个非并发的连接（为局域网用户访问本站考虑）
#每个IP最大连接建立的速率小于每秒8个
#单个IP的最大持续连接数 50
#违反以上规则，把这个ip添加到<abusive_hosts>表中
#定期清空违规IP:pfctl -t abusive_hosts -T expire 300
table <abusive_hosts> persist #维持一个持续的表
block in quick from <abusive_hosts> #阻止表中的ip
pass in on $ext_if inet proto tcp from any to $ext_vip port $tcp_services flags S/SA synproxy state \
(source-track rule,max-src-conn 100, max-src-conn-rate 40/5, max-src-states 50, overload <abusive_hosts> flush, src.track 1)
